# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py UTC_ARGS: --version 5
# RUN: llc -march=v810 -global-isel -run-pass=legalizer %s -o - | FileCheck %s
---
name:              s16_shl
tracksRegLiveness: true
body:              |
  bb.0:
    liveins: $r6
    ; CHECK-LABEL: name: s16_shl
    ; CHECK: liveins: $r6
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; CHECK-NEXT: [[SHL:%[0-9]+]]:_(s32) = G_SHL [[COPY]], [[C]](s32)
    ; CHECK-NEXT: $r10 = COPY [[SHL]](s32)
    ; CHECK-NEXT: RET implicit $r10
    %0:_(s32) = COPY $r6
    %1:_(s16) = G_TRUNC %0
    %2:_(s64) = G_CONSTANT i64 1
    %3:_(s16) = G_SHL %1, %2
    %4:_(s32) = G_ANYEXT %3:_(s16)
    $r10 = COPY %4(s32)
    RET implicit $r10
...
---
name:              s16_lshr
tracksRegLiveness: true
body:              |
  bb.0:
    liveins: $r6
    ; CHECK-LABEL: name: s16_lshr
    ; CHECK: liveins: $r6
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 65535
    ; CHECK-NEXT: [[AND:%[0-9]+]]:_(s32) = G_AND [[COPY]], [[C1]]
    ; CHECK-NEXT: [[LSHR:%[0-9]+]]:_(s32) = G_LSHR [[AND]], [[C]](s32)
    ; CHECK-NEXT: $r10 = COPY [[LSHR]](s32)
    ; CHECK-NEXT: RET implicit $r10
    %0:_(s32) = COPY $r6
    %1:_(s16) = G_TRUNC %0
    %2:_(s32) = G_CONSTANT i32 1
    %3:_(s16) = G_LSHR %1, %2
    %4:_(s32) = G_ANYEXT %3:_(s16)
    $r10 = COPY %4(s32)
    RET implicit $r10
...
---
name:              s16_ashr
tracksRegLiveness: true
body:              |
  bb.0:
    liveins: $r6
    ; CHECK-LABEL: name: s16_ashr
    ; CHECK: liveins: $r6
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s16) = G_TRUNC [[COPY]](s32)
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; CHECK-NEXT: [[SEXT:%[0-9]+]]:_(s32) = G_SEXT [[TRUNC]](s16)
    ; CHECK-NEXT: [[ASHR:%[0-9]+]]:_(s32) = G_ASHR [[SEXT]], [[C]](s32)
    ; CHECK-NEXT: $r10 = COPY [[ASHR]](s32)
    ; CHECK-NEXT: RET implicit $r10
    %0:_(s32) = COPY $r6
    %1:_(s16) = G_TRUNC %0
    %2:_(s32) = G_CONSTANT i32 1
    %3:_(s16) = G_ASHR %1, %2
    %4:_(s32) = G_ANYEXT %3:_(s16)
    $r10 = COPY %4(s32)
    RET implicit $r10
...
---
name:              s32_shl
tracksRegLiveness: true
body:              |
  bb.0:
    liveins: $r6
    ; CHECK-LABEL: name: s32_shl
    ; CHECK: liveins: $r6
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; CHECK-NEXT: [[SHL:%[0-9]+]]:_(s32) = G_SHL [[COPY]], [[C]](s32)
    ; CHECK-NEXT: $r10 = COPY [[SHL]](s32)
    ; CHECK-NEXT: RET implicit $r10
    %0:_(s32) = COPY $r6
    %1:_(s32) = G_CONSTANT i32 1
    %2:_(s32) = G_SHL %0, %1
    $r10 = COPY %2(s32)
    RET implicit $r10
...
---
name:              s32_lshr
tracksRegLiveness: true
body:              |
  bb.0:
    liveins: $r6
    ; CHECK-LABEL: name: s32_lshr
    ; CHECK: liveins: $r6
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; CHECK-NEXT: [[LSHR:%[0-9]+]]:_(s32) = G_LSHR [[COPY]], [[C]](s32)
    ; CHECK-NEXT: $r10 = COPY [[LSHR]](s32)
    ; CHECK-NEXT: RET implicit $r10
    %0:_(s32) = COPY $r6
    %1:_(s32) = G_CONSTANT i32 1
    %2:_(s32) = G_LSHR %0, %1
    $r10 = COPY %2(s32)
    RET implicit $r10
...
---
name:              s32_ashr
tracksRegLiveness: true
body:              |
  bb.0:
    liveins: $r6
    ; CHECK-LABEL: name: s32_ashr
    ; CHECK: liveins: $r6
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; CHECK-NEXT: [[ASHR:%[0-9]+]]:_(s32) = G_ASHR [[COPY]], [[C]](s32)
    ; CHECK-NEXT: $r10 = COPY [[ASHR]](s32)
    ; CHECK-NEXT: RET implicit $r10
    %0:_(s32) = COPY $r6
    %1:_(s32) = G_CONSTANT i32 1
    %2:_(s32) = G_ASHR %0, %1
    $r10 = COPY %2(s32)
    RET implicit $r10
...
---
name:              s64_shl
tracksRegLiveness: true
body:              |
  bb.0:
    liveins: $r6
    ; CHECK-LABEL: name: s64_shl
    ; CHECK: liveins: $r6
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[ANYEXT:%[0-9]+]]:_(s64) = G_ANYEXT [[COPY]](s32)
    ; CHECK-NEXT: [[UV:%[0-9]+]]:_(s32), [[UV1:%[0-9]+]]:_(s32) = G_UNMERGE_VALUES [[ANYEXT]](s64)
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; CHECK-NEXT: [[SHL:%[0-9]+]]:_(s32) = G_SHL [[COPY]], [[C]](s32)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; CHECK-NEXT: [[SHL1:%[0-9]+]]:_(s32) = G_SHL [[UV1]], [[C1]](s32)
    ; CHECK-NEXT: [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 31
    ; CHECK-NEXT: [[LSHR:%[0-9]+]]:_(s32) = G_LSHR [[COPY]], [[C2]](s32)
    ; CHECK-NEXT: [[OR:%[0-9]+]]:_(s32) = G_OR [[SHL1]], [[LSHR]]
    ; CHECK-NEXT: $r10 = COPY [[SHL]](s32)
    ; CHECK-NEXT: $r11 = COPY [[OR]](s32)
    ; CHECK-NEXT: RET implicit $r10, implicit $r11
    %0:_(s32) = COPY $r6
    %1:_(s64) = G_ANYEXT %0
    %2:_(s32) = G_CONSTANT i32 1
    %3:_(s64) = G_SHL %1, %2
    %4:_(s32), %5:_(s32) = G_UNMERGE_VALUES %3:_(s64)
    $r10 = COPY %4(s32)
    $r11 = COPY %5(s32)
    RET implicit $r10, implicit $r11
...
---
name:              s64_lshr
tracksRegLiveness: true
body:              |
  bb.0:
    liveins: $r6
    ; CHECK-LABEL: name: s64_lshr
    ; CHECK: liveins: $r6
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[ANYEXT:%[0-9]+]]:_(s64) = G_ANYEXT [[COPY]](s32)
    ; CHECK-NEXT: [[UV:%[0-9]+]]:_(s32), [[UV1:%[0-9]+]]:_(s32) = G_UNMERGE_VALUES [[ANYEXT]](s64)
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; CHECK-NEXT: [[LSHR:%[0-9]+]]:_(s32) = G_LSHR [[COPY]], [[C]](s32)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 31
    ; CHECK-NEXT: [[SHL:%[0-9]+]]:_(s32) = G_SHL [[UV1]], [[C1]](s32)
    ; CHECK-NEXT: [[OR:%[0-9]+]]:_(s32) = G_OR [[LSHR]], [[SHL]]
    ; CHECK-NEXT: [[LSHR1:%[0-9]+]]:_(s32) = G_LSHR [[UV1]], [[C]](s32)
    ; CHECK-NEXT: $r10 = COPY [[OR]](s32)
    ; CHECK-NEXT: $r11 = COPY [[LSHR1]](s32)
    ; CHECK-NEXT: RET implicit $r10, implicit $r11
    %0:_(s32) = COPY $r6
    %1:_(s64) = G_ANYEXT %0
    %2:_(s32) = G_CONSTANT i32 1
    %3:_(s64) = G_LSHR %1, %2
    %4:_(s32), %5:_(s32) = G_UNMERGE_VALUES %3:_(s64)
    $r10 = COPY %4(s32)
    $r11 = COPY %5(s32)
    RET implicit $r10, implicit $r11
...
---
name:              s64_ashr
tracksRegLiveness: true
body:              |
  bb.0:
    liveins: $r6
    ; CHECK-LABEL: name: s64_ashr
    ; CHECK: liveins: $r6
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(s32) = COPY $r6
    ; CHECK-NEXT: [[ANYEXT:%[0-9]+]]:_(s64) = G_ANYEXT [[COPY]](s32)
    ; CHECK-NEXT: [[UV:%[0-9]+]]:_(s32), [[UV1:%[0-9]+]]:_(s32) = G_UNMERGE_VALUES [[ANYEXT]](s64)
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 1
    ; CHECK-NEXT: [[LSHR:%[0-9]+]]:_(s32) = G_LSHR [[COPY]], [[C]](s32)
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 31
    ; CHECK-NEXT: [[SHL:%[0-9]+]]:_(s32) = G_SHL [[UV1]], [[C1]](s32)
    ; CHECK-NEXT: [[OR:%[0-9]+]]:_(s32) = G_OR [[LSHR]], [[SHL]]
    ; CHECK-NEXT: [[ASHR:%[0-9]+]]:_(s32) = G_ASHR [[UV1]], [[C]](s32)
    ; CHECK-NEXT: $r10 = COPY [[OR]](s32)
    ; CHECK-NEXT: $r11 = COPY [[ASHR]](s32)
    ; CHECK-NEXT: RET implicit $r10, implicit $r11
    %0:_(s32) = COPY $r6
    %1:_(s64) = G_ANYEXT %0
    %2:_(s32) = G_CONSTANT i32 1
    %3:_(s64) = G_ASHR %1, %2
    %4:_(s32), %5:_(s32) = G_UNMERGE_VALUES %3:_(s64)
    $r10 = COPY %4(s32)
    $r11 = COPY %5(s32)
    RET implicit $r10, implicit $r11
...
